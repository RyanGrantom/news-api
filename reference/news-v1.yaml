openapi: 3.1.0
info:
  title: news-v1
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /news:
    parameters: []
    get:
      summary: Get User Info by User ID
      tags: []
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Get User Alice Smith:
                  value:
                    id: 142
                    firstName: Alice
                    lastName: Smith
                    email: alice.smith@gmail.com
                    dateOfBirth: '1997-10-31'
                    emailVerified: true
                    signUpDate: '2019-08-24'
        '404':
          description: User Not Found
      operationId: get-news
      description: Retrieves list of all news articles in database
  '/news/{date}':
    parameters:
      - schema:
          type: string
        name: date
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-news-date
      description: gather news from a specific date
  '/news/{site}':
    parameters:
      - schema:
          type: string
        name: site
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-news-site
      description: gather news from a specific site
  '/news/{site}/{category}':
    parameters:
      - schema:
          type: string
        name: site
        in: path
        required: true
      - schema:
          type: string
        name: category
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-news-site-category
      description: gather news from a specific site and category
  'news/{category}':
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: '1996-08-24'
                    emailVerified: false
                    createDate: '2020-11-18'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                dateOfBirth:
                  type: string
                  format: date
              required:
                - firstName
                - lastName
                - email
                - dateOfBirth
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: '1996-08-24'
        description: Post the necessary fields for the API to create a new user.
      description: gather news in a specific category
    parameters:
      - schema:
          type: string
        name: category
        in: path
        required: true
  '/news/{article-id}':
    parameters:
      - schema:
          type: string
        name: article-id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-news-article-id
      description: retrieve a single news article
components:
  schemas:
    news:
      type: object
  parameters:
    limit:
      name: limit
      in: query
      required: false
      schema:
        type: string
    category:
      name: category
      in: path
      required: true
      schema:
        type: string
    article-id:
      name: article-id
      in: path
      required: true
      schema:
        type: string
    site:
      name: site
      in: path
      required: true
      schema:
        type: string
    date:
      name: date
      in: path
      required: true
      schema:
        type: string
